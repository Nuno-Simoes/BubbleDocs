package pt.ulisboa.tecnico.bubbledocs.domain;

class Portal {
	int userId;
	int sheetId;
}

class User {
    String username;
    String name;
    String password;
    int id;
}

class Permission {
	boolean read;
	boolean write;
}

class RootUser extends User;

class Spreadsheet {
    String name;
    String owner;
    String date;
    int columns;
    int lines;
    int id;
}

class Cell {
	boolean isProtected;
	int line;
	int column;
}

class Content;

class Function extends Content;

class Argument extends Content;

class Literal extends Argument {
	int literal;
}

class Reference extends Argument;

class BinaryFunction extends Function;

class Add extends BinaryFunction;

class Sub extends BinaryFunction;

class Mult extends BinaryFunction;

class Div extends BinaryFunction;

relation SpreadsheetHasCell {
	Spreadsheet playsRole spreadsheet;
	Cell playsRole cells {
		multiplicity *;
	}
}

relation CellHasContent {
	Cell playsRole cell;
	Content playsRole content {
		multiplicity 0..1;
	}
}

relation BinaryFunctionHasArgument1 {
	BinaryFunction playsRole binaryFunction1;
	Argument playsRole argument1;
}

relation BinaryFunctionHasArgument2 {
	BinaryFunction playsRole binaryFunction2;
	Argument playsRole argument2;
}

relation UserHasPermission {
    User playsRole user;
    Permission playsRole permissions {
        multiplicity *;
    }
}

relation PermissionHasSpreadsheet {
	Permission playsRole permissions {
		multiplicity 1..*;
	}
	Spreadsheet playsRole spreadsheet;
}

relation UserHasPortal {
	User playsRole users {
		multiplicity *;
	}
	Portal playsRole portal;
}

relation PortalHasSpeadsheet {
	Portal playsRole portal;
	Spreadsheet playsRole spreadsheets {
		multiplicity *;
	}
}

relation ReferenceHasCell {
	Reference playsRole reference {
		multiplicity *;
	}
	Cell playsRole referencedCell;
}

relation DomainRootHasPortalApplication {
	.pt.ist.fenixframework.DomainRoot playsRole root {
		multiplicity 0..1;
	}
	Portal playsRole portal {
		multiplicity 0..1;
	}
}

relation DomainRootHasRootUser {
	.pt.ist.fenixframework.DomainRoot playsRole root {
		multiplicity 0..1;
	}
	RootUser playsRole rootUser {
		multiplicity 0..1;
	}
}